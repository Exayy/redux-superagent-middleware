{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///library.min.js","webpack:///webpack/bootstrap 9d2ae6108c7ae04aa357","webpack:///./src/index.js","webpack:///./~/superagent/lib/client.js","webpack:///./~/component-emitter/index.js","webpack:///./~/superagent/lib/request-base.js","webpack:///./~/superagent/lib/is-object.js","webpack:///./~/superagent/lib/request.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","goTo","action","store","next","payload","meta","console","error","res","dispatch","getState","responseHandler","response","requestFailed","body","httpCode","status","Object","defineProperty","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","customConfig","config","superagentMiddleware","_superagent","_superagent2","base","defaultHeaders","Content-Type","hooks","request","cancelled","requestActions","Array","requests","map","requestAction","url","method","headers","params","defaultParams","onRequest","onStart","promiseList","push","Promise","resolve","superagentRequest","query","send","end","err","cancel","all","then","responses","interrupted","hadError","finalPayload","finalMeta","index","test","onFailure","onError","name","onSuccess","onComplete","noop","serialize","isObject","pairs","pushEncodedKeyValuePair","join","val","isArray","forEach","v","subkey","encodeURIComponent","parseString","str","pair","pos","split","len","indexOf","decodeURIComponent","slice","parseHeader","line","field","lines","fields","pop","toLowerCase","trim","isJSON","mime","type","shift","reduce","parts","Response","req","options","xhr","text","responseType","responseText","statusText","_setStatusProperties","header","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_parseBody","Request","self","_query","_header","on","e","Error","parse","original","rawResponse","statusCode","callback","emit","new_err","del","fn","window","warn","Emitter","requestBase","bind","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","s","replace","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","get","ct","statusType","info","ok","clientError","serverError","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","set","_responseType","accept","auth","user","pass","btoa","username","password","attach","file","filename","_getFormData","append","_formData","FormData","_callback","clearTimeout","crossDomainError","crossDomain","_timeoutError","timeout","_timeout","_appendQueryString","data","_data","onreadystatechange","readyState","timedout","_aborted","handleProgress","direction","total","percent","hasListeners","onprogress","upload","_timer","setTimeout","abort","open","_withCredentials","withCredentials","_isHost","contentType","_serializer","setRequestHeader","head","patch","post","put","mixin","addEventListener","event","_callbacks","once","off","apply","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","args","listeners","_parser","ms","reject","_fullfilledPromise","innerResolve","innerReject","catch","undefined","use","getHeader","unset","redirects","n","_maxRedirects","toJSON","toString","_typeof","Symbol","iterator","constructor","RequestConstructor"],"mappings":"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","file":"library.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"library\"] = factory();\n\telse\n\t\troot[\"library\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"library\"] = factory();\n\telse\n\t\troot[\"library\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (customConfig) {\n\t    config = _extends({}, config, customConfig);\n\t    return superagentMiddleware;\n\t};\n\t\n\tvar _superagent = __webpack_require__(1);\n\t\n\tvar _superagent2 = _interopRequireDefault(_superagent);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar config = {\n\t    base: \"\",\n\t    defaultHeaders: {\n\t        \"Content-Type\": \"application/json\"\n\t    },\n\t    hooks: {}\n\t};\n\t\n\tfunction goTo(action, store, next, payload, meta) {\n\t\n\t    if (typeof action !== \"function\") {\n\t        /* eslint-disable no-console */\n\t        console.error(\"superagentMiddleware error : onStart, onSuccess, onError, onComplete must be functions\");\n\t        /* eslint-enable no-console */\n\t        return;\n\t    }\n\t\n\t    var res = action(payload, meta, store.dispatch, store.getState);\n\t    res && next(res);\n\t}\n\t\n\tfunction responseHandler(response) {\n\t\n\t    if (!response) {\n\t        return { error: true, meta: { requestFailed: true } };\n\t    }\n\t\n\t    var res = {\n\t        error: true,\n\t        payload: response.body,\n\t        meta: {\n\t            httpCode: response.status\n\t        }\n\t    };\n\t    if (response.status <= 300) {\n\t        res.error = false;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\tvar superagentMiddleware = function superagentMiddleware(store) {\n\t    return function (next) {\n\t        return function (action) {\n\t\n\t            if (!action.request) {\n\t                return next(action);\n\t            }\n\t\n\t            // Cancelled status\n\t            var cancelled = false;\n\t\n\t            // Requests configuration\n\t            var requestActions = action.request instanceof Array ? action.request : [action.request];\n\t            var requests = requestActions.map(function (requestAction) {\n\t                var request = {\n\t                    base: requestAction.base || config.base,\n\t                    url: requestAction.url,\n\t                    method: requestAction.method || \"GET\",\n\t                    headers: _extends({}, config.defaultHeaders, requestAction.headers || {}),\n\t                    params: _extends({}, config.defaultParams, requestAction.params || {}),\n\t                    body: requestAction.body\n\t                };\n\t\n\t                if (config.hooks.onRequest) {\n\t                    request = config.hooks.onRequest(store, action, request) || request;\n\t                }\n\t\n\t                return request;\n\t            });\n\t\n\t            // Requests execution\n\t            action.onStart && goTo(action.onStart, store, next);\n\t            var promiseList = [];\n\t            requests.map(function (request) {\n\t                promiseList.push(new Promise(function (resolve) {\n\t                    var superagentRequest = (0, _superagent2.default)(request.method, request.base + request.url);\n\t                    request.params && superagentRequest.query(request.params);\n\t                    request.body && superagentRequest.send(request.body);\n\t                    superagentRequest.end(function (err, response) {\n\t                        resolve(response);\n\t                    });\n\t                }));\n\t            });\n\t\n\t            // Define cancel in action\n\t            action.cancel = function () {\n\t                cancelled = true;\n\t            };\n\t\n\t            // Handling responses\n\t            Promise.all(promiseList).then(function (responses) {\n\t\n\t                if (cancelled) {\n\t                    return;\n\t                }\n\t\n\t                var interrupted = false;\n\t                var hadError = false;\n\t                var finalPayload = {};\n\t                var finalMeta = {};\n\t                responses.map(function (response, index) {\n\t                    var test = responseHandler(response);\n\t\n\t                    if (test.meta.requestFailed && config.hooks.onFailure && config.hooks.onFailure(store, action, requestActions[index], response) === false || test.error && config.hooks.onError && config.hooks.onError(store, action, requestActions[index], response) === false) {\n\t                        interrupted = true;\n\t                    }\n\t                    if (test.error === true) {\n\t                        hadError = true;\n\t                    }\n\t\n\t                    if (!(action.request instanceof Array)) {\n\t                        finalPayload = test.payload, finalMeta = test.meta;\n\t                    } else {\n\t                        var name = requestActions[index].name || \"request_\" + index;\n\t                        finalPayload[name] = test.payload;\n\t                        finalMeta[name] = test.meta;\n\t                    }\n\t                });\n\t\n\t                if (!interrupted) {\n\t                    !hadError && action.onSuccess && goTo(action.onSuccess, store, next, finalPayload, finalMeta);\n\t                    hadError && action.onError && goTo(action.onError, store, next, finalPayload, finalMeta);\n\t                }\n\t                action.onComplete && goTo(action.onComplete, store, next);\n\t            });\n\t        };\n\t    };\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root;\n\tif (typeof window !== 'undefined') {\n\t  // Browser window\n\t  root = window;\n\t} else if (typeof self !== 'undefined') {\n\t  // Web Worker\n\t  root = self;\n\t} else {\n\t  // Other environments\n\t  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n\t  root = undefined;\n\t}\n\t\n\tvar Emitter = __webpack_require__(2);\n\tvar requestBase = __webpack_require__(3);\n\tvar isObject = __webpack_require__(4);\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop() {};\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tvar request = module.exports = __webpack_require__(5).bind(null, Request);\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest && (!root.location || 'file:' != root.location.protocol || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest();\n\t  } else {\n\t    try {\n\t      return new ActiveXObject('Microsoft.XMLHTTP');\n\t    } catch (e) {}\n\t    try {\n\t      return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n\t    } catch (e) {}\n\t    try {\n\t      return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n\t    } catch (e) {}\n\t    try {\n\t      return new ActiveXObject('Msxml2.XMLHTTP');\n\t    } catch (e) {}\n\t  }\n\t  throw Error(\"Browser-only verison of superagent could not find XHR\");\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim ? function (s) {\n\t  return s.trim();\n\t} : function (s) {\n\t  return s.replace(/(^\\s*|\\s*$)/g, '');\n\t};\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    pushEncodedKeyValuePair(pairs, key, obj[key]);\n\t  }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Helps 'serialize' with serializing arrays.\n\t * Mutates the pairs array.\n\t *\n\t * @param {Array} pairs\n\t * @param {String} key\n\t * @param {Mixed} val\n\t */\n\t\n\tfunction pushEncodedKeyValuePair(pairs, key, val) {\n\t  if (val != null) {\n\t    if (Array.isArray(val)) {\n\t      val.forEach(function (v) {\n\t        pushEncodedKeyValuePair(pairs, key, v);\n\t      });\n\t    } else if (isObject(val)) {\n\t      for (var subkey in val) {\n\t        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n\t      }\n\t    } else {\n\t      pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));\n\t    }\n\t  } else if (val === null) {\n\t    pairs.push(encodeURIComponent(key));\n\t  }\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\trequest.serializeObject = serialize;\n\t\n\t/**\n\t * Parse the given x-www-form-urlencoded `str`.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var pair;\n\t  var pos;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    pos = pair.indexOf('=');\n\t    if (pos == -1) {\n\t      obj[decodeURIComponent(pair)] = '';\n\t    } else {\n\t      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\trequest.serialize = {\n\t  'application/x-www-form-urlencoded': serialize,\n\t  'application/json': JSON.stringify\n\t};\n\t\n\t/**\n\t * Default parsers.\n\t *\n\t *     superagent.parse['application/xml'] = function(str){\n\t *       return { object parsed from str };\n\t *     };\n\t *\n\t */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Check if `mime` is json or has +json structured syntax suffix.\n\t *\n\t * @param {String} mime\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isJSON(mime) {\n\t  return (/[\\/+]json\\b/.test(mime)\n\t  );\n\t}\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction type(str) {\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction params(str) {\n\t  return str.split(/ *; */).reduce(function (obj, str) {\n\t    var parts = str.split(/ *= */),\n\t        key = parts.shift(),\n\t        val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req, options) {\n\t  options = options || {};\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = this.req.method != 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  this._setStatusProperties(this.xhr.status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this._setHeaderProperties(this.header);\n\t  this.body = this.req.method != 'HEAD' ? this._parseBody(this.text ? this.text : this.xhr.response) : null;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.get = function (field) {\n\t  return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponse.prototype._setHeaderProperties = function (header) {\n\t  // content-type\n\t  var ct = this.header['content-type'] || '';\n\t  this.type = type(ct);\n\t\n\t  // params\n\t  var obj = params(ct);\n\t  for (var key in obj) {\n\t    this[key] = obj[key];\n\t  }\n\t};\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype._parseBody = function (str) {\n\t  var parse = request.parse[this.type];\n\t  if (!parse && isJSON(this.type)) {\n\t    parse = request.parse['application/json'];\n\t  }\n\t  return parse && str && (str.length || str instanceof Object) ? parse(str) : null;\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponse.prototype._setStatusProperties = function (status) {\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t    status = 204;\n\t  }\n\t\n\t  var type = status / 100 | 0;\n\t\n\t  // status / class\n\t  this.status = this.statusCode = status;\n\t  this.statusType = type;\n\t\n\t  // basics\n\t  this.info = 1 == type;\n\t  this.ok = 2 == type;\n\t  this.clientError = 4 == type;\n\t  this.serverError = 5 == type;\n\t  this.error = 4 == type || 5 == type ? this.toError() : false;\n\t\n\t  // sugar\n\t  this.accepted = 202 == status;\n\t  this.noContent = 204 == status;\n\t  this.badRequest = 400 == status;\n\t  this.unauthorized = 401 == status;\n\t  this.notAcceptable = 406 == status;\n\t  this.notFound = 404 == status;\n\t  this.forbidden = 403 == status;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function () {\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {}; // preserves header name case\n\t  this._header = {}; // coerces header names to lowercase\n\t  this.on('end', function () {\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch (e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      // issue #675: return the raw response if the response parsing fails\n\t      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n\t      // issue #876: return the http status code if the response parsing fails\n\t      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    var new_err;\n\t    try {\n\t      if (res.status < 200 || res.status >= 300) {\n\t        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t        new_err.original = err;\n\t        new_err.response = res;\n\t        new_err.status = res.status;\n\t      }\n\t    } catch (e) {\n\t      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n\t    }\n\t\n\t    // #1000 don't catch errors from the callback to avoid double calling it\n\t    if (new_err) {\n\t      self.callback(new_err, res);\n\t    } else {\n\t      self.callback(null, res);\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter` and `requestBase`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\tfor (var key in requestBase) {\n\t  Request.prototype[key] = requestBase[key];\n\t}\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function (type) {\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n\t * 'arraybuffer'.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .responseType('blob')\n\t *        .end(callback);\n\t *\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.responseType = function (val) {\n\t  this._responseType = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function (type) {\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} pass\n\t * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function (user, pass, options) {\n\t  if (!options) {\n\t    options = {\n\t      type: 'basic'\n\t    };\n\t  }\n\t\n\t  switch (options.type) {\n\t    case 'basic':\n\t      var str = btoa(user + ':' + pass);\n\t      this.set('Authorization', 'Basic ' + str);\n\t      break;\n\t\n\t    case 'auto':\n\t      this.username = user;\n\t      this.password = pass;\n\t      break;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t* Add query-string `val`.\n\t*\n\t* Examples:\n\t*\n\t*   request.get('/shoes')\n\t*     .query('size=10')\n\t*     .query({ color: 'blue' })\n\t*\n\t* @param {Object|String} val\n\t* @return {Request} for chaining\n\t* @api public\n\t*/\n\t\n\tRequest.prototype.query = function (val) {\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `filename`.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String} filename\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function (field, file, filename) {\n\t  this._getFormData().append(field, file, filename || file.name);\n\t  return this;\n\t};\n\t\n\tRequest.prototype._getFormData = function () {\n\t  if (!this._formData) {\n\t    this._formData = new root.FormData();\n\t  }\n\t  return this._formData;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function (err, res) {\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function () {\n\t  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n\t  err.crossDomain = true;\n\t\n\t  err.status = this.status;\n\t  err.method = this.method;\n\t  err.url = this.url;\n\t\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype._timeoutError = function () {\n\t  var timeout = this._timeout;\n\t  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Compose querystring to append to req.url\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype._appendQueryString = function () {\n\t  var query = this._query.join('&');\n\t  if (query) {\n\t    this.url += ~this.url.indexOf('?') ? '&' + query : '?' + query;\n\t  }\n\t};\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function (fn) {\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var timeout = this._timeout;\n\t  var data = this._formData || this._data;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function () {\n\t    if (4 != xhr.readyState) return;\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try {\n\t      status = xhr.status;\n\t    } catch (e) {\n\t      status = 0;\n\t    }\n\t\n\t    if (0 == status) {\n\t      if (self.timedout) return self._timeoutError();\n\t      if (self._aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function handleProgress(direction, e) {\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    e.direction = direction;\n\t    self.emit('progress', e);\n\t  };\n\t  if (this.hasListeners('progress')) {\n\t    try {\n\t      xhr.onprogress = handleProgress.bind(null, 'download');\n\t      if (xhr.upload) {\n\t        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n\t      }\n\t    } catch (e) {\n\t      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t      // Reported here:\n\t      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t    }\n\t  }\n\t\n\t  // timeout\n\t  if (timeout && !this._timer) {\n\t    this._timer = setTimeout(function () {\n\t      self.timedout = true;\n\t      self.abort();\n\t    }, timeout);\n\t  }\n\t\n\t  // querystring\n\t  this._appendQueryString();\n\t\n\t  // initiate request\n\t  if (this.username && this.password) {\n\t    xhr.open(this.method, this.url, true, this.username, this.password);\n\t  } else {\n\t    xhr.open(this.method, this.url, true);\n\t  }\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n\t    // serialize stuff\n\t    var contentType = this._header['content-type'];\n\t    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\t    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t    xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  if (this._responseType) {\n\t    xhr.responseType = this._responseType;\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t\n\t  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n\t  // We need null here if data is undefined\n\t  xhr.send(typeof data !== 'undefined' ? data : null);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Expose `Request`.\n\t */\n\t\n\trequest.Request = Request;\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function (url, data, fn) {\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function (url, data, fn) {\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * OPTIONS query to `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.options = function (url, data, fn) {\n\t  var req = request('OPTIONS', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction del(url, fn) {\n\t  var req = request('DELETE', url);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\trequest['del'] = del;\n\trequest['delete'] = del;\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} [data]\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function (url, data, fn) {\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} [data]\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function (url, data, fn) {\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function (url, data, fn) {\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\n\t\n\tif (true) {\n\t  module.exports = Emitter;\n\t}\n\t\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\n\t\n\tEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\n\t\n\tEmitter.prototype.once = function (event, fn) {\n\t  function on() {\n\t    this.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\n\t\n\tEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks['$' + event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks['$' + event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\n\t\n\tEmitter.prototype.emit = function (event) {\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1),\n\t      callbacks = this._callbacks['$' + event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\n\t\n\tEmitter.prototype.listeners = function (event) {\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks['$' + event] || [];\n\t};\n\t\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\n\t\n\tEmitter.prototype.hasListeners = function (event) {\n\t  return !!this.listeners(event).length;\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Module of mixed-in functions shared between node and client code\n\t */\n\tvar isObject = __webpack_require__(4);\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.clearTimeout = function _clearTimeout() {\n\t  this._timeout = 0;\n\t  clearTimeout(this._timer);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default response body parser\n\t *\n\t * This function will be called to convert incoming data into request.body\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\texports.parse = function parse(fn) {\n\t  this._parser = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default request body serializer\n\t *\n\t * This function will be called to convert data set via .send or .attach into payload to send\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\texports.serialize = function serialize(fn) {\n\t  this._serializer = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set timeout to `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.timeout = function timeout(ms) {\n\t  this._timeout = ms;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Promise support\n\t *\n\t * @param {Function} resolve\n\t * @param {Function} reject\n\t * @return {Request}\n\t */\n\t\n\texports.then = function then(resolve, reject) {\n\t  if (!this._fullfilledPromise) {\n\t    var self = this;\n\t    this._fullfilledPromise = new Promise(function (innerResolve, innerReject) {\n\t      self.end(function (err, res) {\n\t        if (err) innerReject(err);else innerResolve(res);\n\t      });\n\t    });\n\t  }\n\t  return this._fullfilledPromise.then(resolve, reject);\n\t};\n\t\n\texports.catch = function (cb) {\n\t  return this.then(undefined, cb);\n\t};\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\texports.use = function use(fn) {\n\t  fn(this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Get request header `field`.\n\t * Case-insensitive.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\texports.get = function (field) {\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t * This is a deprecated internal API. Use `.get(field)` instead.\n\t *\n\t * (getHeader is no longer used internally by the superagent code base)\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t * @deprecated\n\t */\n\t\n\texports.getHeader = exports.get;\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t * Case-insensitive.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.set = function (field, val) {\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t * Case-insensitive.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t */\n\texports.unset = function (field) {\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val`, or multiple fields with one object\n\t * for \"multipart/form-data\" request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t *\n\t * request.post('/upload')\n\t *   .field({ foo: 'bar', baz: 'qux' })\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String|Object} name\n\t * @param {String|Blob|File|Buffer|fs.ReadStream} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\texports.field = function (name, val) {\n\t\n\t  // name should be either a string or an object.\n\t  if (null === name || undefined === name) {\n\t    throw new Error('.field(name, val) name can not be empty');\n\t  }\n\t\n\t  if (isObject(name)) {\n\t    for (var key in name) {\n\t      this.field(key, name[key]);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  // val should be defined now\n\t  if (null === val || undefined === val) {\n\t    throw new Error('.field(name, val) val can not be empty');\n\t  }\n\t  this._getFormData().append(name, val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\texports.abort = function () {\n\t  if (this._aborted) {\n\t    return this;\n\t  }\n\t  this._aborted = true;\n\t  this.xhr && this.xhr.abort(); // browser\n\t  this.req && this.req.abort(); // node\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\texports.withCredentials = function () {\n\t  // This is browser-only functionality. Node side is no-op.\n\t  this._withCredentials = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set the max redirects to `n`. Does noting in browser XHR implementation.\n\t *\n\t * @param {Number} n\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.redirects = function (n) {\n\t  this._maxRedirects = n;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Convert to a plain javascript object (not JSON string) of scalar properties.\n\t * Note as this method is designed to return a useful non-this value,\n\t * it cannot be chained.\n\t *\n\t * @return {Object} describing method, url, and data of this request\n\t * @api public\n\t */\n\t\n\texports.toJSON = function () {\n\t  return {\n\t    method: this.method,\n\t    url: this.url,\n\t    data: this._data,\n\t    headers: this._header\n\t  };\n\t};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * TODO: future proof, move to compoent land\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\texports._isHost = function _isHost(obj) {\n\t  var str = {}.toString.call(obj);\n\t\n\t  switch (str) {\n\t    case '[object File]':\n\t    case '[object Blob]':\n\t    case '[object FormData]':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t};\n\t\n\t/**\n\t * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"}')\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t *      request.post('/user')\n\t *        .send('name=tobi')\n\t *        .send('species=ferret')\n\t *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.send = function (data) {\n\t  var obj = isObject(data);\n\t  var type = this._header['content-type'];\n\t\n\t  // merge\n\t  if (obj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    // default to x-www-form-urlencoded\n\t    if (!type) this.type('form');\n\t    type = this._header['content-type'];\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data ? this._data + '&' + data : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!obj || this._isHost(data)) return this;\n\t\n\t  // default to json\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return null !== obj && 'object' === (typeof obj === 'undefined' ? 'undefined' : _typeof(obj));\n\t}\n\t\n\tmodule.exports = isObject;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// The node and browser modules expose versions of this with the\n\t// appropriate constructor function bound as first argument\n\t/**\n\t * Issue a request:\n\t *\n\t * Examples:\n\t *\n\t *    request('GET', '/users').end(callback)\n\t *    request('/users').end(callback)\n\t *    request('/users', callback)\n\t *\n\t * @param {String} method\n\t * @param {String|Function} url or callback\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction request(RequestConstructor, method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new RequestConstructor('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (2 == arguments.length) {\n\t    return new RequestConstructor('GET', method);\n\t  }\n\t\n\t  return new RequestConstructor(method, url);\n\t}\n\t\n\tmodule.exports = request;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// library.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9d2ae6108c7ae04aa357","import superagent from \"superagent\"\n\nlet config = {\n    base : \"\",\n    defaultHeaders : {\n        \"Content-Type\" : \"application/json\",\n    },\n    hooks : {},\n}\n\nfunction goTo(action, store, next, payload, meta) {\n\n    if (typeof action !== \"function\"){\n        /* eslint-disable no-console */\n        console.error(\"superagentMiddleware error : onStart, onSuccess, onError, onComplete must be functions\");\n        /* eslint-enable no-console */\n        return\n    }\n\n    const res = action(payload, meta, store.dispatch, store.getState)\n    res && next(res)\n}\n\nfunction responseHandler(response) {\n\n    if (!response) {\n        return { error : true, meta : { requestFailed : true } }\n    }\n\n    const res = { \n        error : true,\n        payload : response.body,\n        meta : {\n            httpCode : response.status,\n        },\n    }\n    if (response.status <= 300) {\n        res.error = false\n    }\n\n    return res\n}\n\nconst superagentMiddleware = store => next => action => {\n\n    if (!action.request){\n        return next(action)\n    }\n\n    // Cancelled status\n    let cancelled = false\n\n    // Requests configuration\n    const requestActions = action.request instanceof Array ? action.request : [action.request]\n    const requests = requestActions.map(requestAction => {\n        let request = {\n            base : requestAction.base || config.base,\n            url : requestAction.url,\n            method : requestAction.method || \"GET\",\n            headers : { ...config.defaultHeaders, ...(requestAction.headers || {}) },\n            params : { ...config.defaultParams, ...(requestAction.params || {}) },\n            body : requestAction.body,\n        }\n\n        if (config.hooks.onRequest) {\n            request = config.hooks.onRequest(store, action, request) || request\n        }\n\n        return request\n    })\n\n    // Requests execution\n    action.onStart && goTo(action.onStart, store, next)\n    const promiseList = []\n    requests.map(request => {\n        promiseList.push(new Promise(resolve => {\n            const superagentRequest = superagent(request.method, request.base + request.url)\n            request.params && superagentRequest.query(request.params)\n            request.body && superagentRequest.send(request.body)\n            superagentRequest.end((err, response) => {\n                resolve(response)\n            })\n        }))\n    })\n\n    // Define cancel in action\n    action.cancel = () => {\n        cancelled = true\n    }\n\n    // Handling responses\n    Promise.all(promiseList).then((responses) => {\n\n        if (cancelled) {\n            return\n        }\n\n        let interrupted = false\n        let hadError = false\n        let finalPayload = {}\n        let finalMeta = {}\n        responses.map((response, index) => {\n            const test = responseHandler(response)\n\n            if ((test.meta.requestFailed && config.hooks.onFailure && config.hooks.onFailure(store, action, requestActions[index], response) === false) ||\n                (test.error && config.hooks.onError && config.hooks.onError(store, action, requestActions[index], response) === false)) {\n                interrupted = true\n            }\n            if (test.error === true) {\n                hadError = true\n            }\n\n            if (!(action.request instanceof Array)){\n                finalPayload = test.payload,\n                finalMeta = test.meta\n            } else {\n                const name = requestActions[index].name || \"request_\" + index\n                finalPayload[name] = test.payload\n                finalMeta[name] = test.meta\n            }\n        })\n\n        if (!interrupted) {\n            !hadError && action.onSuccess && goTo(action.onSuccess, store, next, finalPayload, finalMeta)\n            hadError && action.onError && goTo(action.onError, store, next, finalPayload, finalMeta)\n        }\n        action.onComplete && goTo(action.onComplete, store, next)\n    })\n}\n\nexport default function(customConfig){\n    config = {...config, ...customConfig}\n    return superagentMiddleware\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('emitter');\nvar requestBase = require('./request-base');\nvar isObject = require('./is-object');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = require('./request').bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */),\n        key = parts.shift(),\n        val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this._setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this._parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype._setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype._setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (res.status < 200 || res.status >= 300) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype._timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self._timeoutError();\n      if (self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/superagent/lib/client.js","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/component-emitter/index.js","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nexports.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nexports.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nexports.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nexports.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nexports.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nexports.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nexports._isHost = function _isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nexports.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || this._isHost(data)) return this;\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/superagent/lib/request-base.js","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n\n// WEBPACK FOOTER //\n// ./~/superagent/lib/is-object.js","// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n\n\n\n// WEBPACK FOOTER //\n// ./~/superagent/lib/request.js"],"sourceRoot":""}